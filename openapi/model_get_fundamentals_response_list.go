/*
 * Webull API
 *
 * Webull API Documentation
 *
 * API version: 3.0.1
 * Contact: austin.millan@gmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetFundamentalsResponseList struct for GetFundamentalsResponseList
type GetFundamentalsResponseList struct {
	NetIncomeAfterTax *string `json:"netIncomeAfterTax,omitempty"`
	NetIncomeRate *string `json:"netIncomeRate,omitempty"`
	ReportEndDate *string `json:"reportEndDate,omitempty"`
	Revenue *string `json:"revenue,omitempty"`
}

// NewGetFundamentalsResponseList instantiates a new GetFundamentalsResponseList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFundamentalsResponseList() *GetFundamentalsResponseList {
	this := GetFundamentalsResponseList{}
	return &this
}

// NewGetFundamentalsResponseListWithDefaults instantiates a new GetFundamentalsResponseList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFundamentalsResponseListWithDefaults() *GetFundamentalsResponseList {
	this := GetFundamentalsResponseList{}
	return &this
}

// GetNetIncomeAfterTax returns the NetIncomeAfterTax field value if set, zero value otherwise.
func (o *GetFundamentalsResponseList) GetNetIncomeAfterTax() string {
	if o == nil || o.NetIncomeAfterTax == nil {
		var ret string
		return ret
	}
	return *o.NetIncomeAfterTax
}

// GetNetIncomeAfterTaxOk returns a tuple with the NetIncomeAfterTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseList) GetNetIncomeAfterTaxOk() (*string, bool) {
	if o == nil || o.NetIncomeAfterTax == nil {
		return nil, false
	}
	return o.NetIncomeAfterTax, true
}

// HasNetIncomeAfterTax returns a boolean if a field has been set.
func (o *GetFundamentalsResponseList) HasNetIncomeAfterTax() bool {
	if o != nil && o.NetIncomeAfterTax != nil {
		return true
	}

	return false
}

// SetNetIncomeAfterTax gets a reference to the given string and assigns it to the NetIncomeAfterTax field.
func (o *GetFundamentalsResponseList) SetNetIncomeAfterTax(v string) {
	o.NetIncomeAfterTax = &v
}

// GetNetIncomeRate returns the NetIncomeRate field value if set, zero value otherwise.
func (o *GetFundamentalsResponseList) GetNetIncomeRate() string {
	if o == nil || o.NetIncomeRate == nil {
		var ret string
		return ret
	}
	return *o.NetIncomeRate
}

// GetNetIncomeRateOk returns a tuple with the NetIncomeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseList) GetNetIncomeRateOk() (*string, bool) {
	if o == nil || o.NetIncomeRate == nil {
		return nil, false
	}
	return o.NetIncomeRate, true
}

// HasNetIncomeRate returns a boolean if a field has been set.
func (o *GetFundamentalsResponseList) HasNetIncomeRate() bool {
	if o != nil && o.NetIncomeRate != nil {
		return true
	}

	return false
}

// SetNetIncomeRate gets a reference to the given string and assigns it to the NetIncomeRate field.
func (o *GetFundamentalsResponseList) SetNetIncomeRate(v string) {
	o.NetIncomeRate = &v
}

// GetReportEndDate returns the ReportEndDate field value if set, zero value otherwise.
func (o *GetFundamentalsResponseList) GetReportEndDate() string {
	if o == nil || o.ReportEndDate == nil {
		var ret string
		return ret
	}
	return *o.ReportEndDate
}

// GetReportEndDateOk returns a tuple with the ReportEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseList) GetReportEndDateOk() (*string, bool) {
	if o == nil || o.ReportEndDate == nil {
		return nil, false
	}
	return o.ReportEndDate, true
}

// HasReportEndDate returns a boolean if a field has been set.
func (o *GetFundamentalsResponseList) HasReportEndDate() bool {
	if o != nil && o.ReportEndDate != nil {
		return true
	}

	return false
}

// SetReportEndDate gets a reference to the given string and assigns it to the ReportEndDate field.
func (o *GetFundamentalsResponseList) SetReportEndDate(v string) {
	o.ReportEndDate = &v
}

// GetRevenue returns the Revenue field value if set, zero value otherwise.
func (o *GetFundamentalsResponseList) GetRevenue() string {
	if o == nil || o.Revenue == nil {
		var ret string
		return ret
	}
	return *o.Revenue
}

// GetRevenueOk returns a tuple with the Revenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseList) GetRevenueOk() (*string, bool) {
	if o == nil || o.Revenue == nil {
		return nil, false
	}
	return o.Revenue, true
}

// HasRevenue returns a boolean if a field has been set.
func (o *GetFundamentalsResponseList) HasRevenue() bool {
	if o != nil && o.Revenue != nil {
		return true
	}

	return false
}

// SetRevenue gets a reference to the given string and assigns it to the Revenue field.
func (o *GetFundamentalsResponseList) SetRevenue(v string) {
	o.Revenue = &v
}

func (o GetFundamentalsResponseList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetIncomeAfterTax != nil {
		toSerialize["netIncomeAfterTax"] = o.NetIncomeAfterTax
	}
	if o.NetIncomeRate != nil {
		toSerialize["netIncomeRate"] = o.NetIncomeRate
	}
	if o.ReportEndDate != nil {
		toSerialize["reportEndDate"] = o.ReportEndDate
	}
	if o.Revenue != nil {
		toSerialize["revenue"] = o.Revenue
	}
	return json.Marshal(toSerialize)
}

type NullableGetFundamentalsResponseList struct {
	value *GetFundamentalsResponseList
	isSet bool
}

func (v NullableGetFundamentalsResponseList) Get() *GetFundamentalsResponseList {
	return v.value
}

func (v *NullableGetFundamentalsResponseList) Set(val *GetFundamentalsResponseList) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFundamentalsResponseList) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFundamentalsResponseList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFundamentalsResponseList(val *GetFundamentalsResponseList) *NullableGetFundamentalsResponseList {
	return &NullableGetFundamentalsResponseList{value: val, isSet: true}
}

func (v NullableGetFundamentalsResponseList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFundamentalsResponseList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


