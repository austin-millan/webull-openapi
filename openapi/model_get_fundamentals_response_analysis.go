/*
 * Webull API
 *
 * Webull API Documentation
 *
 * API version: 3.0.1
 * Contact: austin.millan@gmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetFundamentalsResponseAnalysis struct for GetFundamentalsResponseAnalysis
type GetFundamentalsResponseAnalysis struct {
	Datas *[]GetFundamentalsResponseAnalysisDatas `json:"datas,omitempty"`
	IndustryName *string `json:"industryName,omitempty"`
	TotalCount *int32 `json:"totalCount,omitempty"`
}

// NewGetFundamentalsResponseAnalysis instantiates a new GetFundamentalsResponseAnalysis object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFundamentalsResponseAnalysis() *GetFundamentalsResponseAnalysis {
	this := GetFundamentalsResponseAnalysis{}
	return &this
}

// NewGetFundamentalsResponseAnalysisWithDefaults instantiates a new GetFundamentalsResponseAnalysis object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFundamentalsResponseAnalysisWithDefaults() *GetFundamentalsResponseAnalysis {
	this := GetFundamentalsResponseAnalysis{}
	return &this
}

// GetDatas returns the Datas field value if set, zero value otherwise.
func (o *GetFundamentalsResponseAnalysis) GetDatas() []GetFundamentalsResponseAnalysisDatas {
	if o == nil || o.Datas == nil {
		var ret []GetFundamentalsResponseAnalysisDatas
		return ret
	}
	return *o.Datas
}

// GetDatasOk returns a tuple with the Datas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseAnalysis) GetDatasOk() (*[]GetFundamentalsResponseAnalysisDatas, bool) {
	if o == nil || o.Datas == nil {
		return nil, false
	}
	return o.Datas, true
}

// HasDatas returns a boolean if a field has been set.
func (o *GetFundamentalsResponseAnalysis) HasDatas() bool {
	if o != nil && o.Datas != nil {
		return true
	}

	return false
}

// SetDatas gets a reference to the given []GetFundamentalsResponseAnalysisDatas and assigns it to the Datas field.
func (o *GetFundamentalsResponseAnalysis) SetDatas(v []GetFundamentalsResponseAnalysisDatas) {
	o.Datas = &v
}

// GetIndustryName returns the IndustryName field value if set, zero value otherwise.
func (o *GetFundamentalsResponseAnalysis) GetIndustryName() string {
	if o == nil || o.IndustryName == nil {
		var ret string
		return ret
	}
	return *o.IndustryName
}

// GetIndustryNameOk returns a tuple with the IndustryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseAnalysis) GetIndustryNameOk() (*string, bool) {
	if o == nil || o.IndustryName == nil {
		return nil, false
	}
	return o.IndustryName, true
}

// HasIndustryName returns a boolean if a field has been set.
func (o *GetFundamentalsResponseAnalysis) HasIndustryName() bool {
	if o != nil && o.IndustryName != nil {
		return true
	}

	return false
}

// SetIndustryName gets a reference to the given string and assigns it to the IndustryName field.
func (o *GetFundamentalsResponseAnalysis) SetIndustryName(v string) {
	o.IndustryName = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *GetFundamentalsResponseAnalysis) GetTotalCount() int32 {
	if o == nil || o.TotalCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseAnalysis) GetTotalCountOk() (*int32, bool) {
	if o == nil || o.TotalCount == nil {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *GetFundamentalsResponseAnalysis) HasTotalCount() bool {
	if o != nil && o.TotalCount != nil {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *GetFundamentalsResponseAnalysis) SetTotalCount(v int32) {
	o.TotalCount = &v
}

func (o GetFundamentalsResponseAnalysis) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Datas != nil {
		toSerialize["datas"] = o.Datas
	}
	if o.IndustryName != nil {
		toSerialize["industryName"] = o.IndustryName
	}
	if o.TotalCount != nil {
		toSerialize["totalCount"] = o.TotalCount
	}
	return json.Marshal(toSerialize)
}

type NullableGetFundamentalsResponseAnalysis struct {
	value *GetFundamentalsResponseAnalysis
	isSet bool
}

func (v NullableGetFundamentalsResponseAnalysis) Get() *GetFundamentalsResponseAnalysis {
	return v.value
}

func (v *NullableGetFundamentalsResponseAnalysis) Set(val *GetFundamentalsResponseAnalysis) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFundamentalsResponseAnalysis) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFundamentalsResponseAnalysis) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFundamentalsResponseAnalysis(val *GetFundamentalsResponseAnalysis) *NullableGetFundamentalsResponseAnalysis {
	return &NullableGetFundamentalsResponseAnalysis{value: val, isSet: true}
}

func (v NullableGetFundamentalsResponseAnalysis) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFundamentalsResponseAnalysis) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


