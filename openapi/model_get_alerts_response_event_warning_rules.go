/*
 * Webull API
 *
 * Webull API Documentation
 *
 * API version: 3.0.1
 * Contact: austin.millan@gmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetAlertsResponseEventWarningRules struct for GetAlertsResponseEventWarningRules
type GetAlertsResponseEventWarningRules struct {
	Active *string `json:"active,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewGetAlertsResponseEventWarningRules instantiates a new GetAlertsResponseEventWarningRules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAlertsResponseEventWarningRules() *GetAlertsResponseEventWarningRules {
	this := GetAlertsResponseEventWarningRules{}
	return &this
}

// NewGetAlertsResponseEventWarningRulesWithDefaults instantiates a new GetAlertsResponseEventWarningRules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAlertsResponseEventWarningRulesWithDefaults() *GetAlertsResponseEventWarningRules {
	this := GetAlertsResponseEventWarningRules{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *GetAlertsResponseEventWarningRules) GetActive() string {
	if o == nil || o.Active == nil {
		var ret string
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseEventWarningRules) GetActiveOk() (*string, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *GetAlertsResponseEventWarningRules) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given string and assigns it to the Active field.
func (o *GetAlertsResponseEventWarningRules) SetActive(v string) {
	o.Active = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetAlertsResponseEventWarningRules) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseEventWarningRules) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetAlertsResponseEventWarningRules) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetAlertsResponseEventWarningRules) SetType(v string) {
	o.Type = &v
}

func (o GetAlertsResponseEventWarningRules) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableGetAlertsResponseEventWarningRules struct {
	value *GetAlertsResponseEventWarningRules
	isSet bool
}

func (v NullableGetAlertsResponseEventWarningRules) Get() *GetAlertsResponseEventWarningRules {
	return v.value
}

func (v *NullableGetAlertsResponseEventWarningRules) Set(val *GetAlertsResponseEventWarningRules) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAlertsResponseEventWarningRules) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAlertsResponseEventWarningRules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAlertsResponseEventWarningRules(val *GetAlertsResponseEventWarningRules) *NullableGetAlertsResponseEventWarningRules {
	return &NullableGetAlertsResponseEventWarningRules{value: val, isSet: true}
}

func (v NullableGetAlertsResponseEventWarningRules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAlertsResponseEventWarningRules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


