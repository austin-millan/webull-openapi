/*
 * Webull API
 *
 * Webull API Documentation
 *
 * API version: 3.0.1
 * Contact: austin.millan@gmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetAlertsResponseTickerWarningRules struct for GetAlertsResponseTickerWarningRules
type GetAlertsResponseTickerWarningRules struct {
	Active *string `json:"active,omitempty"`
	AlertId *int32 `json:"alertId,omitempty"`
	Field *string `json:"field,omitempty"`
	Remark *string `json:"remark,omitempty"`
	Timestamp *float32 `json:"timestamp,omitempty"`
	Type *string `json:"type,omitempty"`
	Value *float32 `json:"value,omitempty"`
}

// NewGetAlertsResponseTickerWarningRules instantiates a new GetAlertsResponseTickerWarningRules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAlertsResponseTickerWarningRules() *GetAlertsResponseTickerWarningRules {
	this := GetAlertsResponseTickerWarningRules{}
	return &this
}

// NewGetAlertsResponseTickerWarningRulesWithDefaults instantiates a new GetAlertsResponseTickerWarningRules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAlertsResponseTickerWarningRulesWithDefaults() *GetAlertsResponseTickerWarningRules {
	this := GetAlertsResponseTickerWarningRules{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *GetAlertsResponseTickerWarningRules) GetActive() string {
	if o == nil || o.Active == nil {
		var ret string
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseTickerWarningRules) GetActiveOk() (*string, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *GetAlertsResponseTickerWarningRules) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given string and assigns it to the Active field.
func (o *GetAlertsResponseTickerWarningRules) SetActive(v string) {
	o.Active = &v
}

// GetAlertId returns the AlertId field value if set, zero value otherwise.
func (o *GetAlertsResponseTickerWarningRules) GetAlertId() int32 {
	if o == nil || o.AlertId == nil {
		var ret int32
		return ret
	}
	return *o.AlertId
}

// GetAlertIdOk returns a tuple with the AlertId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseTickerWarningRules) GetAlertIdOk() (*int32, bool) {
	if o == nil || o.AlertId == nil {
		return nil, false
	}
	return o.AlertId, true
}

// HasAlertId returns a boolean if a field has been set.
func (o *GetAlertsResponseTickerWarningRules) HasAlertId() bool {
	if o != nil && o.AlertId != nil {
		return true
	}

	return false
}

// SetAlertId gets a reference to the given int32 and assigns it to the AlertId field.
func (o *GetAlertsResponseTickerWarningRules) SetAlertId(v int32) {
	o.AlertId = &v
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *GetAlertsResponseTickerWarningRules) GetField() string {
	if o == nil || o.Field == nil {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseTickerWarningRules) GetFieldOk() (*string, bool) {
	if o == nil || o.Field == nil {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *GetAlertsResponseTickerWarningRules) HasField() bool {
	if o != nil && o.Field != nil {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *GetAlertsResponseTickerWarningRules) SetField(v string) {
	o.Field = &v
}

// GetRemark returns the Remark field value if set, zero value otherwise.
func (o *GetAlertsResponseTickerWarningRules) GetRemark() string {
	if o == nil || o.Remark == nil {
		var ret string
		return ret
	}
	return *o.Remark
}

// GetRemarkOk returns a tuple with the Remark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseTickerWarningRules) GetRemarkOk() (*string, bool) {
	if o == nil || o.Remark == nil {
		return nil, false
	}
	return o.Remark, true
}

// HasRemark returns a boolean if a field has been set.
func (o *GetAlertsResponseTickerWarningRules) HasRemark() bool {
	if o != nil && o.Remark != nil {
		return true
	}

	return false
}

// SetRemark gets a reference to the given string and assigns it to the Remark field.
func (o *GetAlertsResponseTickerWarningRules) SetRemark(v string) {
	o.Remark = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *GetAlertsResponseTickerWarningRules) GetTimestamp() float32 {
	if o == nil || o.Timestamp == nil {
		var ret float32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseTickerWarningRules) GetTimestampOk() (*float32, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *GetAlertsResponseTickerWarningRules) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given float32 and assigns it to the Timestamp field.
func (o *GetAlertsResponseTickerWarningRules) SetTimestamp(v float32) {
	o.Timestamp = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetAlertsResponseTickerWarningRules) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseTickerWarningRules) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetAlertsResponseTickerWarningRules) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetAlertsResponseTickerWarningRules) SetType(v string) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *GetAlertsResponseTickerWarningRules) GetValue() float32 {
	if o == nil || o.Value == nil {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseTickerWarningRules) GetValueOk() (*float32, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *GetAlertsResponseTickerWarningRules) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *GetAlertsResponseTickerWarningRules) SetValue(v float32) {
	o.Value = &v
}

func (o GetAlertsResponseTickerWarningRules) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.AlertId != nil {
		toSerialize["alertId"] = o.AlertId
	}
	if o.Field != nil {
		toSerialize["field"] = o.Field
	}
	if o.Remark != nil {
		toSerialize["remark"] = o.Remark
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableGetAlertsResponseTickerWarningRules struct {
	value *GetAlertsResponseTickerWarningRules
	isSet bool
}

func (v NullableGetAlertsResponseTickerWarningRules) Get() *GetAlertsResponseTickerWarningRules {
	return v.value
}

func (v *NullableGetAlertsResponseTickerWarningRules) Set(val *GetAlertsResponseTickerWarningRules) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAlertsResponseTickerWarningRules) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAlertsResponseTickerWarningRules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAlertsResponseTickerWarningRules(val *GetAlertsResponseTickerWarningRules) *NullableGetAlertsResponseTickerWarningRules {
	return &NullableGetAlertsResponseTickerWarningRules{value: val, isSet: true}
}

func (v NullableGetAlertsResponseTickerWarningRules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAlertsResponseTickerWarningRules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


