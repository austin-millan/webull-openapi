/*
 * Webull API
 *
 * Webull API Documentation
 *
 * API version: 3.0.1
 * Contact: austin.millan@gmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetFundamentalsResponseSingle struct for GetFundamentalsResponseSingle
type GetFundamentalsResponseSingle struct {
	CurrencyId *int32 `json:"currencyId,omitempty"`
	DilutedEps *string `json:"dilutedEps,omitempty"`
	GrossProfit *string `json:"grossProfit,omitempty"`
	NetIncomeAfterTax *string `json:"netIncomeAfterTax,omitempty"`
	OperatingIncome *string `json:"operatingIncome,omitempty"`
	ParentEarning *string `json:"parentEarning,omitempty"`
	ReportEndDate *string `json:"reportEndDate,omitempty"`
	Revenue *string `json:"revenue,omitempty"`
}

// NewGetFundamentalsResponseSingle instantiates a new GetFundamentalsResponseSingle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFundamentalsResponseSingle() *GetFundamentalsResponseSingle {
	this := GetFundamentalsResponseSingle{}
	return &this
}

// NewGetFundamentalsResponseSingleWithDefaults instantiates a new GetFundamentalsResponseSingle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFundamentalsResponseSingleWithDefaults() *GetFundamentalsResponseSingle {
	this := GetFundamentalsResponseSingle{}
	return &this
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSingle) GetCurrencyId() int32 {
	if o == nil || o.CurrencyId == nil {
		var ret int32
		return ret
	}
	return *o.CurrencyId
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSingle) GetCurrencyIdOk() (*int32, bool) {
	if o == nil || o.CurrencyId == nil {
		return nil, false
	}
	return o.CurrencyId, true
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSingle) HasCurrencyId() bool {
	if o != nil && o.CurrencyId != nil {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given int32 and assigns it to the CurrencyId field.
func (o *GetFundamentalsResponseSingle) SetCurrencyId(v int32) {
	o.CurrencyId = &v
}

// GetDilutedEps returns the DilutedEps field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSingle) GetDilutedEps() string {
	if o == nil || o.DilutedEps == nil {
		var ret string
		return ret
	}
	return *o.DilutedEps
}

// GetDilutedEpsOk returns a tuple with the DilutedEps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSingle) GetDilutedEpsOk() (*string, bool) {
	if o == nil || o.DilutedEps == nil {
		return nil, false
	}
	return o.DilutedEps, true
}

// HasDilutedEps returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSingle) HasDilutedEps() bool {
	if o != nil && o.DilutedEps != nil {
		return true
	}

	return false
}

// SetDilutedEps gets a reference to the given string and assigns it to the DilutedEps field.
func (o *GetFundamentalsResponseSingle) SetDilutedEps(v string) {
	o.DilutedEps = &v
}

// GetGrossProfit returns the GrossProfit field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSingle) GetGrossProfit() string {
	if o == nil || o.GrossProfit == nil {
		var ret string
		return ret
	}
	return *o.GrossProfit
}

// GetGrossProfitOk returns a tuple with the GrossProfit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSingle) GetGrossProfitOk() (*string, bool) {
	if o == nil || o.GrossProfit == nil {
		return nil, false
	}
	return o.GrossProfit, true
}

// HasGrossProfit returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSingle) HasGrossProfit() bool {
	if o != nil && o.GrossProfit != nil {
		return true
	}

	return false
}

// SetGrossProfit gets a reference to the given string and assigns it to the GrossProfit field.
func (o *GetFundamentalsResponseSingle) SetGrossProfit(v string) {
	o.GrossProfit = &v
}

// GetNetIncomeAfterTax returns the NetIncomeAfterTax field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSingle) GetNetIncomeAfterTax() string {
	if o == nil || o.NetIncomeAfterTax == nil {
		var ret string
		return ret
	}
	return *o.NetIncomeAfterTax
}

// GetNetIncomeAfterTaxOk returns a tuple with the NetIncomeAfterTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSingle) GetNetIncomeAfterTaxOk() (*string, bool) {
	if o == nil || o.NetIncomeAfterTax == nil {
		return nil, false
	}
	return o.NetIncomeAfterTax, true
}

// HasNetIncomeAfterTax returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSingle) HasNetIncomeAfterTax() bool {
	if o != nil && o.NetIncomeAfterTax != nil {
		return true
	}

	return false
}

// SetNetIncomeAfterTax gets a reference to the given string and assigns it to the NetIncomeAfterTax field.
func (o *GetFundamentalsResponseSingle) SetNetIncomeAfterTax(v string) {
	o.NetIncomeAfterTax = &v
}

// GetOperatingIncome returns the OperatingIncome field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSingle) GetOperatingIncome() string {
	if o == nil || o.OperatingIncome == nil {
		var ret string
		return ret
	}
	return *o.OperatingIncome
}

// GetOperatingIncomeOk returns a tuple with the OperatingIncome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSingle) GetOperatingIncomeOk() (*string, bool) {
	if o == nil || o.OperatingIncome == nil {
		return nil, false
	}
	return o.OperatingIncome, true
}

// HasOperatingIncome returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSingle) HasOperatingIncome() bool {
	if o != nil && o.OperatingIncome != nil {
		return true
	}

	return false
}

// SetOperatingIncome gets a reference to the given string and assigns it to the OperatingIncome field.
func (o *GetFundamentalsResponseSingle) SetOperatingIncome(v string) {
	o.OperatingIncome = &v
}

// GetParentEarning returns the ParentEarning field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSingle) GetParentEarning() string {
	if o == nil || o.ParentEarning == nil {
		var ret string
		return ret
	}
	return *o.ParentEarning
}

// GetParentEarningOk returns a tuple with the ParentEarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSingle) GetParentEarningOk() (*string, bool) {
	if o == nil || o.ParentEarning == nil {
		return nil, false
	}
	return o.ParentEarning, true
}

// HasParentEarning returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSingle) HasParentEarning() bool {
	if o != nil && o.ParentEarning != nil {
		return true
	}

	return false
}

// SetParentEarning gets a reference to the given string and assigns it to the ParentEarning field.
func (o *GetFundamentalsResponseSingle) SetParentEarning(v string) {
	o.ParentEarning = &v
}

// GetReportEndDate returns the ReportEndDate field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSingle) GetReportEndDate() string {
	if o == nil || o.ReportEndDate == nil {
		var ret string
		return ret
	}
	return *o.ReportEndDate
}

// GetReportEndDateOk returns a tuple with the ReportEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSingle) GetReportEndDateOk() (*string, bool) {
	if o == nil || o.ReportEndDate == nil {
		return nil, false
	}
	return o.ReportEndDate, true
}

// HasReportEndDate returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSingle) HasReportEndDate() bool {
	if o != nil && o.ReportEndDate != nil {
		return true
	}

	return false
}

// SetReportEndDate gets a reference to the given string and assigns it to the ReportEndDate field.
func (o *GetFundamentalsResponseSingle) SetReportEndDate(v string) {
	o.ReportEndDate = &v
}

// GetRevenue returns the Revenue field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSingle) GetRevenue() string {
	if o == nil || o.Revenue == nil {
		var ret string
		return ret
	}
	return *o.Revenue
}

// GetRevenueOk returns a tuple with the Revenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSingle) GetRevenueOk() (*string, bool) {
	if o == nil || o.Revenue == nil {
		return nil, false
	}
	return o.Revenue, true
}

// HasRevenue returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSingle) HasRevenue() bool {
	if o != nil && o.Revenue != nil {
		return true
	}

	return false
}

// SetRevenue gets a reference to the given string and assigns it to the Revenue field.
func (o *GetFundamentalsResponseSingle) SetRevenue(v string) {
	o.Revenue = &v
}

func (o GetFundamentalsResponseSingle) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CurrencyId != nil {
		toSerialize["currencyId"] = o.CurrencyId
	}
	if o.DilutedEps != nil {
		toSerialize["dilutedEps"] = o.DilutedEps
	}
	if o.GrossProfit != nil {
		toSerialize["grossProfit"] = o.GrossProfit
	}
	if o.NetIncomeAfterTax != nil {
		toSerialize["netIncomeAfterTax"] = o.NetIncomeAfterTax
	}
	if o.OperatingIncome != nil {
		toSerialize["operatingIncome"] = o.OperatingIncome
	}
	if o.ParentEarning != nil {
		toSerialize["parentEarning"] = o.ParentEarning
	}
	if o.ReportEndDate != nil {
		toSerialize["reportEndDate"] = o.ReportEndDate
	}
	if o.Revenue != nil {
		toSerialize["revenue"] = o.Revenue
	}
	return json.Marshal(toSerialize)
}

type NullableGetFundamentalsResponseSingle struct {
	value *GetFundamentalsResponseSingle
	isSet bool
}

func (v NullableGetFundamentalsResponseSingle) Get() *GetFundamentalsResponseSingle {
	return v.value
}

func (v *NullableGetFundamentalsResponseSingle) Set(val *GetFundamentalsResponseSingle) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFundamentalsResponseSingle) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFundamentalsResponseSingle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFundamentalsResponseSingle(val *GetFundamentalsResponseSingle) *NullableGetFundamentalsResponseSingle {
	return &NullableGetFundamentalsResponseSingle{value: val, isSet: true}
}

func (v NullableGetFundamentalsResponseSingle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFundamentalsResponseSingle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


