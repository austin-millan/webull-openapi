/*
 * Webull API
 *
 * Webull API Documentation
 *
 * API version: 3.0.1
 * Contact: austin.millan@gmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Attach struct for Attach
type Attach struct {
	HkexPrivilege *string `json:"hkex_privilege,omitempty"`
}

// NewAttach instantiates a new Attach object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttach() *Attach {
	this := Attach{}
	var hkexPrivilege string = "true"
	this.HkexPrivilege = &hkexPrivilege
	return &this
}

// NewAttachWithDefaults instantiates a new Attach object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachWithDefaults() *Attach {
	this := Attach{}
	var hkexPrivilege string = "true"
	this.HkexPrivilege = &hkexPrivilege
	return &this
}

// GetHkexPrivilege returns the HkexPrivilege field value if set, zero value otherwise.
func (o *Attach) GetHkexPrivilege() string {
	if o == nil || o.HkexPrivilege == nil {
		var ret string
		return ret
	}
	return *o.HkexPrivilege
}

// GetHkexPrivilegeOk returns a tuple with the HkexPrivilege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attach) GetHkexPrivilegeOk() (*string, bool) {
	if o == nil || o.HkexPrivilege == nil {
		return nil, false
	}
	return o.HkexPrivilege, true
}

// HasHkexPrivilege returns a boolean if a field has been set.
func (o *Attach) HasHkexPrivilege() bool {
	if o != nil && o.HkexPrivilege != nil {
		return true
	}

	return false
}

// SetHkexPrivilege gets a reference to the given string and assigns it to the HkexPrivilege field.
func (o *Attach) SetHkexPrivilege(v string) {
	o.HkexPrivilege = &v
}

func (o Attach) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HkexPrivilege != nil {
		toSerialize["hkex_privilege"] = o.HkexPrivilege
	}
	return json.Marshal(toSerialize)
}

type NullableAttach struct {
	value *Attach
	isSet bool
}

func (v NullableAttach) Get() *Attach {
	return v.value
}

func (v *NullableAttach) Set(val *Attach) {
	v.value = val
	v.isSet = true
}

func (v NullableAttach) IsSet() bool {
	return v.isSet
}

func (v *NullableAttach) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttach(val *Attach) *NullableAttach {
	return &NullableAttach{value: val, isSet: true}
}

func (v NullableAttach) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttach) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


