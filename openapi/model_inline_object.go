/*
 * Webull API
 *
 * Webull API Documentation
 *
 * API version: 3.0.1
 * Contact: austin.millan@gmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject struct for InlineObject
type InlineObject struct {
	SerialId *string `json:"serialId,omitempty"`
	CancelOrders *[]string `json:"cancelOrders,omitempty"`
}

// NewInlineObject instantiates a new InlineObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject() *InlineObject {
	this := InlineObject{}
	return &this
}

// NewInlineObjectWithDefaults instantiates a new InlineObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObjectWithDefaults() *InlineObject {
	this := InlineObject{}
	return &this
}

// GetSerialId returns the SerialId field value if set, zero value otherwise.
func (o *InlineObject) GetSerialId() string {
	if o == nil || o.SerialId == nil {
		var ret string
		return ret
	}
	return *o.SerialId
}

// GetSerialIdOk returns a tuple with the SerialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject) GetSerialIdOk() (*string, bool) {
	if o == nil || o.SerialId == nil {
		return nil, false
	}
	return o.SerialId, true
}

// HasSerialId returns a boolean if a field has been set.
func (o *InlineObject) HasSerialId() bool {
	if o != nil && o.SerialId != nil {
		return true
	}

	return false
}

// SetSerialId gets a reference to the given string and assigns it to the SerialId field.
func (o *InlineObject) SetSerialId(v string) {
	o.SerialId = &v
}

// GetCancelOrders returns the CancelOrders field value if set, zero value otherwise.
func (o *InlineObject) GetCancelOrders() []string {
	if o == nil || o.CancelOrders == nil {
		var ret []string
		return ret
	}
	return *o.CancelOrders
}

// GetCancelOrdersOk returns a tuple with the CancelOrders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject) GetCancelOrdersOk() (*[]string, bool) {
	if o == nil || o.CancelOrders == nil {
		return nil, false
	}
	return o.CancelOrders, true
}

// HasCancelOrders returns a boolean if a field has been set.
func (o *InlineObject) HasCancelOrders() bool {
	if o != nil && o.CancelOrders != nil {
		return true
	}

	return false
}

// SetCancelOrders gets a reference to the given []string and assigns it to the CancelOrders field.
func (o *InlineObject) SetCancelOrders(v []string) {
	o.CancelOrders = &v
}

func (o InlineObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SerialId != nil {
		toSerialize["serialId"] = o.SerialId
	}
	if o.CancelOrders != nil {
		toSerialize["cancelOrders"] = o.CancelOrders
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject struct {
	value *InlineObject
	isSet bool
}

func (v NullableInlineObject) Get() *InlineObject {
	return v.value
}

func (v *NullableInlineObject) Set(val *InlineObject) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject(val *InlineObject) *NullableInlineObject {
	return &NullableInlineObject{value: val, isSet: true}
}

func (v NullableInlineObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


