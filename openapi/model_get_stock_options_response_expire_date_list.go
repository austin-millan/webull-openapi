/*
 * Webull API
 *
 * Webull API Documentation
 *
 * API version: 3.0.1
 * Contact: austin.millan@gmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetStockOptionsResponseExpireDateList struct for GetStockOptionsResponseExpireDateList
type GetStockOptionsResponseExpireDateList struct {
	Date *string `json:"date,omitempty"`
	Days *int32 `json:"days,omitempty"`
	UnSymbol *string `json:"unSymbol,omitempty"`
	Weekly *int32 `json:"weekly,omitempty"`
}

// NewGetStockOptionsResponseExpireDateList instantiates a new GetStockOptionsResponseExpireDateList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetStockOptionsResponseExpireDateList() *GetStockOptionsResponseExpireDateList {
	this := GetStockOptionsResponseExpireDateList{}
	return &this
}

// NewGetStockOptionsResponseExpireDateListWithDefaults instantiates a new GetStockOptionsResponseExpireDateList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetStockOptionsResponseExpireDateListWithDefaults() *GetStockOptionsResponseExpireDateList {
	this := GetStockOptionsResponseExpireDateList{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *GetStockOptionsResponseExpireDateList) GetDate() string {
	if o == nil || o.Date == nil {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockOptionsResponseExpireDateList) GetDateOk() (*string, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *GetStockOptionsResponseExpireDateList) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *GetStockOptionsResponseExpireDateList) SetDate(v string) {
	o.Date = &v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *GetStockOptionsResponseExpireDateList) GetDays() int32 {
	if o == nil || o.Days == nil {
		var ret int32
		return ret
	}
	return *o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockOptionsResponseExpireDateList) GetDaysOk() (*int32, bool) {
	if o == nil || o.Days == nil {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *GetStockOptionsResponseExpireDateList) HasDays() bool {
	if o != nil && o.Days != nil {
		return true
	}

	return false
}

// SetDays gets a reference to the given int32 and assigns it to the Days field.
func (o *GetStockOptionsResponseExpireDateList) SetDays(v int32) {
	o.Days = &v
}

// GetUnSymbol returns the UnSymbol field value if set, zero value otherwise.
func (o *GetStockOptionsResponseExpireDateList) GetUnSymbol() string {
	if o == nil || o.UnSymbol == nil {
		var ret string
		return ret
	}
	return *o.UnSymbol
}

// GetUnSymbolOk returns a tuple with the UnSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockOptionsResponseExpireDateList) GetUnSymbolOk() (*string, bool) {
	if o == nil || o.UnSymbol == nil {
		return nil, false
	}
	return o.UnSymbol, true
}

// HasUnSymbol returns a boolean if a field has been set.
func (o *GetStockOptionsResponseExpireDateList) HasUnSymbol() bool {
	if o != nil && o.UnSymbol != nil {
		return true
	}

	return false
}

// SetUnSymbol gets a reference to the given string and assigns it to the UnSymbol field.
func (o *GetStockOptionsResponseExpireDateList) SetUnSymbol(v string) {
	o.UnSymbol = &v
}

// GetWeekly returns the Weekly field value if set, zero value otherwise.
func (o *GetStockOptionsResponseExpireDateList) GetWeekly() int32 {
	if o == nil || o.Weekly == nil {
		var ret int32
		return ret
	}
	return *o.Weekly
}

// GetWeeklyOk returns a tuple with the Weekly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockOptionsResponseExpireDateList) GetWeeklyOk() (*int32, bool) {
	if o == nil || o.Weekly == nil {
		return nil, false
	}
	return o.Weekly, true
}

// HasWeekly returns a boolean if a field has been set.
func (o *GetStockOptionsResponseExpireDateList) HasWeekly() bool {
	if o != nil && o.Weekly != nil {
		return true
	}

	return false
}

// SetWeekly gets a reference to the given int32 and assigns it to the Weekly field.
func (o *GetStockOptionsResponseExpireDateList) SetWeekly(v int32) {
	o.Weekly = &v
}

func (o GetStockOptionsResponseExpireDateList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	if o.Days != nil {
		toSerialize["days"] = o.Days
	}
	if o.UnSymbol != nil {
		toSerialize["unSymbol"] = o.UnSymbol
	}
	if o.Weekly != nil {
		toSerialize["weekly"] = o.Weekly
	}
	return json.Marshal(toSerialize)
}

type NullableGetStockOptionsResponseExpireDateList struct {
	value *GetStockOptionsResponseExpireDateList
	isSet bool
}

func (v NullableGetStockOptionsResponseExpireDateList) Get() *GetStockOptionsResponseExpireDateList {
	return v.value
}

func (v *NullableGetStockOptionsResponseExpireDateList) Set(val *GetStockOptionsResponseExpireDateList) {
	v.value = val
	v.isSet = true
}

func (v NullableGetStockOptionsResponseExpireDateList) IsSet() bool {
	return v.isSet
}

func (v *NullableGetStockOptionsResponseExpireDateList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetStockOptionsResponseExpireDateList(val *GetStockOptionsResponseExpireDateList) *NullableGetStockOptionsResponseExpireDateList {
	return &NullableGetStockOptionsResponseExpireDateList{value: val, isSet: true}
}

func (v NullableGetStockOptionsResponseExpireDateList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetStockOptionsResponseExpireDateList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


