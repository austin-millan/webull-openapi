/*
 * Webull API
 *
 * Webull API Documentation
 *
 * API version: 3.0.1
 * Contact: austin.millan@gmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetFundamentalsResponseAnalysisDatas struct for GetFundamentalsResponseAnalysisDatas
type GetFundamentalsResponseAnalysisDatas struct {
	Label *string `json:"label,omitempty"`
	MaxValue *string `json:"maxValue,omitempty"`
	Name *string `json:"name,omitempty"`
	Rank *int32 `json:"rank,omitempty"`
	TotalCount *int32 `json:"totalCount,omitempty"`
	Type *int32 `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewGetFundamentalsResponseAnalysisDatas instantiates a new GetFundamentalsResponseAnalysisDatas object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFundamentalsResponseAnalysisDatas() *GetFundamentalsResponseAnalysisDatas {
	this := GetFundamentalsResponseAnalysisDatas{}
	return &this
}

// NewGetFundamentalsResponseAnalysisDatasWithDefaults instantiates a new GetFundamentalsResponseAnalysisDatas object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFundamentalsResponseAnalysisDatasWithDefaults() *GetFundamentalsResponseAnalysisDatas {
	this := GetFundamentalsResponseAnalysisDatas{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *GetFundamentalsResponseAnalysisDatas) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseAnalysisDatas) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *GetFundamentalsResponseAnalysisDatas) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *GetFundamentalsResponseAnalysisDatas) SetLabel(v string) {
	o.Label = &v
}

// GetMaxValue returns the MaxValue field value if set, zero value otherwise.
func (o *GetFundamentalsResponseAnalysisDatas) GetMaxValue() string {
	if o == nil || o.MaxValue == nil {
		var ret string
		return ret
	}
	return *o.MaxValue
}

// GetMaxValueOk returns a tuple with the MaxValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseAnalysisDatas) GetMaxValueOk() (*string, bool) {
	if o == nil || o.MaxValue == nil {
		return nil, false
	}
	return o.MaxValue, true
}

// HasMaxValue returns a boolean if a field has been set.
func (o *GetFundamentalsResponseAnalysisDatas) HasMaxValue() bool {
	if o != nil && o.MaxValue != nil {
		return true
	}

	return false
}

// SetMaxValue gets a reference to the given string and assigns it to the MaxValue field.
func (o *GetFundamentalsResponseAnalysisDatas) SetMaxValue(v string) {
	o.MaxValue = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetFundamentalsResponseAnalysisDatas) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseAnalysisDatas) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetFundamentalsResponseAnalysisDatas) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetFundamentalsResponseAnalysisDatas) SetName(v string) {
	o.Name = &v
}

// GetRank returns the Rank field value if set, zero value otherwise.
func (o *GetFundamentalsResponseAnalysisDatas) GetRank() int32 {
	if o == nil || o.Rank == nil {
		var ret int32
		return ret
	}
	return *o.Rank
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseAnalysisDatas) GetRankOk() (*int32, bool) {
	if o == nil || o.Rank == nil {
		return nil, false
	}
	return o.Rank, true
}

// HasRank returns a boolean if a field has been set.
func (o *GetFundamentalsResponseAnalysisDatas) HasRank() bool {
	if o != nil && o.Rank != nil {
		return true
	}

	return false
}

// SetRank gets a reference to the given int32 and assigns it to the Rank field.
func (o *GetFundamentalsResponseAnalysisDatas) SetRank(v int32) {
	o.Rank = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *GetFundamentalsResponseAnalysisDatas) GetTotalCount() int32 {
	if o == nil || o.TotalCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseAnalysisDatas) GetTotalCountOk() (*int32, bool) {
	if o == nil || o.TotalCount == nil {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *GetFundamentalsResponseAnalysisDatas) HasTotalCount() bool {
	if o != nil && o.TotalCount != nil {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *GetFundamentalsResponseAnalysisDatas) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetFundamentalsResponseAnalysisDatas) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseAnalysisDatas) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetFundamentalsResponseAnalysisDatas) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *GetFundamentalsResponseAnalysisDatas) SetType(v int32) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *GetFundamentalsResponseAnalysisDatas) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseAnalysisDatas) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *GetFundamentalsResponseAnalysisDatas) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *GetFundamentalsResponseAnalysisDatas) SetValue(v string) {
	o.Value = &v
}

func (o GetFundamentalsResponseAnalysisDatas) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	if o.MaxValue != nil {
		toSerialize["maxValue"] = o.MaxValue
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Rank != nil {
		toSerialize["rank"] = o.Rank
	}
	if o.TotalCount != nil {
		toSerialize["totalCount"] = o.TotalCount
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableGetFundamentalsResponseAnalysisDatas struct {
	value *GetFundamentalsResponseAnalysisDatas
	isSet bool
}

func (v NullableGetFundamentalsResponseAnalysisDatas) Get() *GetFundamentalsResponseAnalysisDatas {
	return v.value
}

func (v *NullableGetFundamentalsResponseAnalysisDatas) Set(val *GetFundamentalsResponseAnalysisDatas) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFundamentalsResponseAnalysisDatas) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFundamentalsResponseAnalysisDatas) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFundamentalsResponseAnalysisDatas(val *GetFundamentalsResponseAnalysisDatas) *NullableGetFundamentalsResponseAnalysisDatas {
	return &NullableGetFundamentalsResponseAnalysisDatas{value: val, isSet: true}
}

func (v NullableGetFundamentalsResponseAnalysisDatas) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFundamentalsResponseAnalysisDatas) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


