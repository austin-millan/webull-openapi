/*
 * Webull API
 *
 * Webull API Documentation
 *
 * API version: 3.0.1
 * Contact: austin.millan@gmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetOrdersItemTicker struct for GetOrdersItemTicker
type GetOrdersItemTicker struct {
	CurrencyCode *string `json:"currencyCode,omitempty"`
	CurrencyId *int32 `json:"currencyId,omitempty"`
	DisExchangeCode *string `json:"disExchangeCode,omitempty"`
	DisSymbol *string `json:"disSymbol,omitempty"`
	ExchangeCode *string `json:"exchangeCode,omitempty"`
	ExchangeId *int32 `json:"exchangeId,omitempty"`
	ExchangeTrade *bool `json:"exchangeTrade,omitempty"`
	ExtType *[]map[string]interface{} `json:"extType,omitempty"`
	ListStatus *int32 `json:"listStatus,omitempty"`
	Name *string `json:"name,omitempty"`
	RegionId *int32 `json:"regionId,omitempty"`
	RegionIsoCode *string `json:"regionIsoCode,omitempty"`
	RegionName *string `json:"regionName,omitempty"`
	SecType *[]int32 `json:"secType,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	TickerId *int32 `json:"tickerId,omitempty"`
	TinyName *string `json:"tinyName,omitempty"`
	Type *int32 `json:"type,omitempty"`
}

// NewGetOrdersItemTicker instantiates a new GetOrdersItemTicker object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrdersItemTicker() *GetOrdersItemTicker {
	this := GetOrdersItemTicker{}
	return &this
}

// NewGetOrdersItemTickerWithDefaults instantiates a new GetOrdersItemTicker object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrdersItemTickerWithDefaults() *GetOrdersItemTicker {
	this := GetOrdersItemTicker{}
	return &this
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetCurrencyCode() string {
	if o == nil || o.CurrencyCode == nil {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || o.CurrencyCode == nil {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasCurrencyCode() bool {
	if o != nil && o.CurrencyCode != nil {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *GetOrdersItemTicker) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetCurrencyId() int32 {
	if o == nil || o.CurrencyId == nil {
		var ret int32
		return ret
	}
	return *o.CurrencyId
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetCurrencyIdOk() (*int32, bool) {
	if o == nil || o.CurrencyId == nil {
		return nil, false
	}
	return o.CurrencyId, true
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasCurrencyId() bool {
	if o != nil && o.CurrencyId != nil {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given int32 and assigns it to the CurrencyId field.
func (o *GetOrdersItemTicker) SetCurrencyId(v int32) {
	o.CurrencyId = &v
}

// GetDisExchangeCode returns the DisExchangeCode field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetDisExchangeCode() string {
	if o == nil || o.DisExchangeCode == nil {
		var ret string
		return ret
	}
	return *o.DisExchangeCode
}

// GetDisExchangeCodeOk returns a tuple with the DisExchangeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetDisExchangeCodeOk() (*string, bool) {
	if o == nil || o.DisExchangeCode == nil {
		return nil, false
	}
	return o.DisExchangeCode, true
}

// HasDisExchangeCode returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasDisExchangeCode() bool {
	if o != nil && o.DisExchangeCode != nil {
		return true
	}

	return false
}

// SetDisExchangeCode gets a reference to the given string and assigns it to the DisExchangeCode field.
func (o *GetOrdersItemTicker) SetDisExchangeCode(v string) {
	o.DisExchangeCode = &v
}

// GetDisSymbol returns the DisSymbol field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetDisSymbol() string {
	if o == nil || o.DisSymbol == nil {
		var ret string
		return ret
	}
	return *o.DisSymbol
}

// GetDisSymbolOk returns a tuple with the DisSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetDisSymbolOk() (*string, bool) {
	if o == nil || o.DisSymbol == nil {
		return nil, false
	}
	return o.DisSymbol, true
}

// HasDisSymbol returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasDisSymbol() bool {
	if o != nil && o.DisSymbol != nil {
		return true
	}

	return false
}

// SetDisSymbol gets a reference to the given string and assigns it to the DisSymbol field.
func (o *GetOrdersItemTicker) SetDisSymbol(v string) {
	o.DisSymbol = &v
}

// GetExchangeCode returns the ExchangeCode field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetExchangeCode() string {
	if o == nil || o.ExchangeCode == nil {
		var ret string
		return ret
	}
	return *o.ExchangeCode
}

// GetExchangeCodeOk returns a tuple with the ExchangeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetExchangeCodeOk() (*string, bool) {
	if o == nil || o.ExchangeCode == nil {
		return nil, false
	}
	return o.ExchangeCode, true
}

// HasExchangeCode returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasExchangeCode() bool {
	if o != nil && o.ExchangeCode != nil {
		return true
	}

	return false
}

// SetExchangeCode gets a reference to the given string and assigns it to the ExchangeCode field.
func (o *GetOrdersItemTicker) SetExchangeCode(v string) {
	o.ExchangeCode = &v
}

// GetExchangeId returns the ExchangeId field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetExchangeId() int32 {
	if o == nil || o.ExchangeId == nil {
		var ret int32
		return ret
	}
	return *o.ExchangeId
}

// GetExchangeIdOk returns a tuple with the ExchangeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetExchangeIdOk() (*int32, bool) {
	if o == nil || o.ExchangeId == nil {
		return nil, false
	}
	return o.ExchangeId, true
}

// HasExchangeId returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasExchangeId() bool {
	if o != nil && o.ExchangeId != nil {
		return true
	}

	return false
}

// SetExchangeId gets a reference to the given int32 and assigns it to the ExchangeId field.
func (o *GetOrdersItemTicker) SetExchangeId(v int32) {
	o.ExchangeId = &v
}

// GetExchangeTrade returns the ExchangeTrade field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetExchangeTrade() bool {
	if o == nil || o.ExchangeTrade == nil {
		var ret bool
		return ret
	}
	return *o.ExchangeTrade
}

// GetExchangeTradeOk returns a tuple with the ExchangeTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetExchangeTradeOk() (*bool, bool) {
	if o == nil || o.ExchangeTrade == nil {
		return nil, false
	}
	return o.ExchangeTrade, true
}

// HasExchangeTrade returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasExchangeTrade() bool {
	if o != nil && o.ExchangeTrade != nil {
		return true
	}

	return false
}

// SetExchangeTrade gets a reference to the given bool and assigns it to the ExchangeTrade field.
func (o *GetOrdersItemTicker) SetExchangeTrade(v bool) {
	o.ExchangeTrade = &v
}

// GetExtType returns the ExtType field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetExtType() []map[string]interface{} {
	if o == nil || o.ExtType == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.ExtType
}

// GetExtTypeOk returns a tuple with the ExtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetExtTypeOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.ExtType == nil {
		return nil, false
	}
	return o.ExtType, true
}

// HasExtType returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasExtType() bool {
	if o != nil && o.ExtType != nil {
		return true
	}

	return false
}

// SetExtType gets a reference to the given []map[string]interface{} and assigns it to the ExtType field.
func (o *GetOrdersItemTicker) SetExtType(v []map[string]interface{}) {
	o.ExtType = &v
}

// GetListStatus returns the ListStatus field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetListStatus() int32 {
	if o == nil || o.ListStatus == nil {
		var ret int32
		return ret
	}
	return *o.ListStatus
}

// GetListStatusOk returns a tuple with the ListStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetListStatusOk() (*int32, bool) {
	if o == nil || o.ListStatus == nil {
		return nil, false
	}
	return o.ListStatus, true
}

// HasListStatus returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasListStatus() bool {
	if o != nil && o.ListStatus != nil {
		return true
	}

	return false
}

// SetListStatus gets a reference to the given int32 and assigns it to the ListStatus field.
func (o *GetOrdersItemTicker) SetListStatus(v int32) {
	o.ListStatus = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetOrdersItemTicker) SetName(v string) {
	o.Name = &v
}

// GetRegionId returns the RegionId field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetRegionId() int32 {
	if o == nil || o.RegionId == nil {
		var ret int32
		return ret
	}
	return *o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetRegionIdOk() (*int32, bool) {
	if o == nil || o.RegionId == nil {
		return nil, false
	}
	return o.RegionId, true
}

// HasRegionId returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasRegionId() bool {
	if o != nil && o.RegionId != nil {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given int32 and assigns it to the RegionId field.
func (o *GetOrdersItemTicker) SetRegionId(v int32) {
	o.RegionId = &v
}

// GetRegionIsoCode returns the RegionIsoCode field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetRegionIsoCode() string {
	if o == nil || o.RegionIsoCode == nil {
		var ret string
		return ret
	}
	return *o.RegionIsoCode
}

// GetRegionIsoCodeOk returns a tuple with the RegionIsoCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetRegionIsoCodeOk() (*string, bool) {
	if o == nil || o.RegionIsoCode == nil {
		return nil, false
	}
	return o.RegionIsoCode, true
}

// HasRegionIsoCode returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasRegionIsoCode() bool {
	if o != nil && o.RegionIsoCode != nil {
		return true
	}

	return false
}

// SetRegionIsoCode gets a reference to the given string and assigns it to the RegionIsoCode field.
func (o *GetOrdersItemTicker) SetRegionIsoCode(v string) {
	o.RegionIsoCode = &v
}

// GetRegionName returns the RegionName field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetRegionName() string {
	if o == nil || o.RegionName == nil {
		var ret string
		return ret
	}
	return *o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetRegionNameOk() (*string, bool) {
	if o == nil || o.RegionName == nil {
		return nil, false
	}
	return o.RegionName, true
}

// HasRegionName returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasRegionName() bool {
	if o != nil && o.RegionName != nil {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given string and assigns it to the RegionName field.
func (o *GetOrdersItemTicker) SetRegionName(v string) {
	o.RegionName = &v
}

// GetSecType returns the SecType field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetSecType() []int32 {
	if o == nil || o.SecType == nil {
		var ret []int32
		return ret
	}
	return *o.SecType
}

// GetSecTypeOk returns a tuple with the SecType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetSecTypeOk() (*[]int32, bool) {
	if o == nil || o.SecType == nil {
		return nil, false
	}
	return o.SecType, true
}

// HasSecType returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasSecType() bool {
	if o != nil && o.SecType != nil {
		return true
	}

	return false
}

// SetSecType gets a reference to the given []int32 and assigns it to the SecType field.
func (o *GetOrdersItemTicker) SetSecType(v []int32) {
	o.SecType = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *GetOrdersItemTicker) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTickerId returns the TickerId field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetTickerId() int32 {
	if o == nil || o.TickerId == nil {
		var ret int32
		return ret
	}
	return *o.TickerId
}

// GetTickerIdOk returns a tuple with the TickerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetTickerIdOk() (*int32, bool) {
	if o == nil || o.TickerId == nil {
		return nil, false
	}
	return o.TickerId, true
}

// HasTickerId returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasTickerId() bool {
	if o != nil && o.TickerId != nil {
		return true
	}

	return false
}

// SetTickerId gets a reference to the given int32 and assigns it to the TickerId field.
func (o *GetOrdersItemTicker) SetTickerId(v int32) {
	o.TickerId = &v
}

// GetTinyName returns the TinyName field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetTinyName() string {
	if o == nil || o.TinyName == nil {
		var ret string
		return ret
	}
	return *o.TinyName
}

// GetTinyNameOk returns a tuple with the TinyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetTinyNameOk() (*string, bool) {
	if o == nil || o.TinyName == nil {
		return nil, false
	}
	return o.TinyName, true
}

// HasTinyName returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasTinyName() bool {
	if o != nil && o.TinyName != nil {
		return true
	}

	return false
}

// SetTinyName gets a reference to the given string and assigns it to the TinyName field.
func (o *GetOrdersItemTicker) SetTinyName(v string) {
	o.TinyName = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetOrdersItemTicker) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItemTicker) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetOrdersItemTicker) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *GetOrdersItemTicker) SetType(v int32) {
	o.Type = &v
}

func (o GetOrdersItemTicker) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CurrencyCode != nil {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if o.CurrencyId != nil {
		toSerialize["currencyId"] = o.CurrencyId
	}
	if o.DisExchangeCode != nil {
		toSerialize["disExchangeCode"] = o.DisExchangeCode
	}
	if o.DisSymbol != nil {
		toSerialize["disSymbol"] = o.DisSymbol
	}
	if o.ExchangeCode != nil {
		toSerialize["exchangeCode"] = o.ExchangeCode
	}
	if o.ExchangeId != nil {
		toSerialize["exchangeId"] = o.ExchangeId
	}
	if o.ExchangeTrade != nil {
		toSerialize["exchangeTrade"] = o.ExchangeTrade
	}
	if o.ExtType != nil {
		toSerialize["extType"] = o.ExtType
	}
	if o.ListStatus != nil {
		toSerialize["listStatus"] = o.ListStatus
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.RegionId != nil {
		toSerialize["regionId"] = o.RegionId
	}
	if o.RegionIsoCode != nil {
		toSerialize["regionIsoCode"] = o.RegionIsoCode
	}
	if o.RegionName != nil {
		toSerialize["regionName"] = o.RegionName
	}
	if o.SecType != nil {
		toSerialize["secType"] = o.SecType
	}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.TickerId != nil {
		toSerialize["tickerId"] = o.TickerId
	}
	if o.TinyName != nil {
		toSerialize["tinyName"] = o.TinyName
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableGetOrdersItemTicker struct {
	value *GetOrdersItemTicker
	isSet bool
}

func (v NullableGetOrdersItemTicker) Get() *GetOrdersItemTicker {
	return v.value
}

func (v *NullableGetOrdersItemTicker) Set(val *GetOrdersItemTicker) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrdersItemTicker) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrdersItemTicker) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrdersItemTicker(val *GetOrdersItemTicker) *NullableGetOrdersItemTicker {
	return &NullableGetOrdersItemTicker{value: val, isSet: true}
}

func (v NullableGetOrdersItemTicker) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrdersItemTicker) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


